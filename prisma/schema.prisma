// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model professor {
  id    Int    @id @default(autoincrement())
  nome  String
  username String @unique()
}

model aluno {
  id          Int           @id @default(autoincrement())
  nome        String
  username      String @unique()
  curso_aluno curso_aluno[]
  aula_aluno  aula_aluno[]
}

model curso {
  id          Int           @id @default(autoincrement())
  nome        String
  description String
  banner      String
  curso_aluno curso_aluno[]
  aula        aula[]
  aulasAluno  aula_aluno[]
}

model aula {
  id      Int    @id @default(autoincrement())
  cursoId Int
  content String

  curso      curso        @relation(fields: [cursoId], references: [id])
  aula_aluno aula_aluno[]
}

model aula_aluno {
  id        Int      @id @default(autoincrement())
  aulaId    Int
  alunoId   Int
  cursoId   Int
  progresso Int
  createdAt DateTime @default(now())

  aula  aula  @relation(fields: [aulaId], references: [id])
  aluno aluno @relation(fields: [alunoId], references: [id])
  curso curso @relation(fields: [cursoId], references: [id])

  @@index([aulaId, alunoId], name: "unique_aula_aluno")
}


model curso_aluno {
  id        Int      @id @default(autoincrement())
  cursoId   Int
  alunoId   Int
  ativo     Boolean
  createdAt DateTime @default(now())
  status Status

  curso curso @relation(fields: [cursoId], references: [id])
  aluno aluno @relation(fields: [alunoId], references: [id])
  @@map("cursos")
  @@index([cursoId, alunoId], name: "unique_curso_aluno")
}

enum Status {
  NaoIniciado
  EmAndamento
  Finalizado
  Aprovado
}